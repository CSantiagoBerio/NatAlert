Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASSIGN
    CHAR
    COMMA
    COMMENT
    CREATE
    DECLARATION
    DOUBLE
    ELSE
    FOR
    GET
    IF
    LET
    METHOD
    NOTIFY
    NUMBER
    SET
    THEN
    TYPE
    WHILE

Grammar

Rule 0     S' -> settitle
Rule 1     settitle -> TITLE COLON STRING ENDLINE
Rule 2     setevent -> EVENTS COLON STRING ENDLINE
Rule 3     setlocation -> LOCATION COLON STRING ENDLINE
Rule 4     setsendto -> SENDTO COLON STRING ENDLINE
Rule 5     expression -> IDENTIFIER DOT NEW LBrace settitle setevent setlocation setsendto RBrace ENDLINE
Rule 6     expression -> IDENTIFIER DOT INITUI LParen RParen
Rule 7     expression -> IDENTIFIER DOT INITDB LParen RParen

Terminals, with rules where they appear

ASSIGN               : 
CHAR                 : 
COLON                : 1 2 3 4
COMMA                : 
COMMENT              : 
CREATE               : 
DECLARATION          : 
DOT                  : 5 6 7
DOUBLE               : 
ELSE                 : 
ENDLINE              : 1 2 3 4 5
EVENTS               : 2
FOR                  : 
GET                  : 
IDENTIFIER           : 5 6 7
IF                   : 
INITDB               : 7
INITUI               : 6
LBrace               : 5
LET                  : 
LOCATION             : 3
LParen               : 6 7
METHOD               : 
NEW                  : 5
NOTIFY               : 
NUMBER               : 
RBrace               : 5
RParen               : 6 7
SENDTO               : 4
SET                  : 
STRING               : 1 2 3 4
THEN                 : 
TITLE                : 1
TYPE                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

expression           : 
setevent             : 5
setlocation          : 5
setsendto            : 5
settitle             : 5 0

Parsing method: LALR

state 0

    (0) S' -> . settitle
    (1) settitle -> . TITLE COLON STRING ENDLINE

    TITLE           shift and go to state 2

    settitle                       shift and go to state 1

state 1

    (0) S' -> settitle .



state 2

    (1) settitle -> TITLE . COLON STRING ENDLINE

    COLON           shift and go to state 3


state 3

    (1) settitle -> TITLE COLON . STRING ENDLINE

    STRING          shift and go to state 4


state 4

    (1) settitle -> TITLE COLON STRING . ENDLINE

    ENDLINE         shift and go to state 5


state 5

    (1) settitle -> TITLE COLON STRING ENDLINE .

    $end            reduce using rule 1 (settitle -> TITLE COLON STRING ENDLINE .)

